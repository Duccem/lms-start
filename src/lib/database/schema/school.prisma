model Organization {
  id        String   @id @default(uuid())
  name      String
  slug      String   @unique
  logo      String?
  metadata  String?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  Member    Member[]

  @@map("organizations")
}

model Member {
  id             String   @id @default(uuid())
  userId         String   @map("user_id")
  organizationId String   @map("organization_id")
  role           String   @default("member")
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt      DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@map("members")
}

model Invitation {
  id String @id @default(uuid())

  organizationId String @map("organization_id")
  inviterId      String @map("inviter_id")

  email  String
  role   String @default("member")
  status String @default("pending")

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("invitations")
}
