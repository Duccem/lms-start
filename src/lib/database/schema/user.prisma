model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String?
  name      String?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  accounts Account[]
  Session  Session[]
  Member   Member[]
  Course   Course[]

  @@map("user")
}

model Account {
  id                    String    @id @default(uuid())
  accountId             String    @map("account_id")
  providerId            String    @map("provider_id")
  userId                String    @map("user_id")
  accessToken           String?   @map("access_token")
  refreshToken          String?   @map("refresh_token")
  idToken               String?   @map("id_token")
  accessTokenExpiresAt  DateTime? @map("access_token_expires_at") @db.Timestamp(6)
  refreshTokenExpiresAt DateTime? @map("refresh_token_expires_at") @db.Timestamp(6)
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt             DateTime  @default(now()) @map("updated_at") @db.Timestamp(6)
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Session {
  id                   String   @id @default(uuid())
  expiresAt            DateTime @map("expires_at") @db.Timestamp(6)
  token                String   @unique(map: "session_token_unique")
  createdAt            DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt            DateTime @default(now()) @map("updated_at") @db.Timestamp(6)
  ipAddress            String?  @map("ip_address")
  userAgent            String?  @map("user_agent")
  userId               String   @map("user_id")
  activeOrganizationId String?  @map("active_organization_id")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Verification {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique()
  expires    DateTime @map("expires") @db.Timestamp(6)
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("verification")
}
